[{"D:\\REACT\\si-task-final\\src\\index.js":"1","D:\\REACT\\si-task-final\\src\\App.js":"2","D:\\REACT\\si-task-final\\src\\components\\footer\\Footer.js":"3","D:\\REACT\\si-task-final\\src\\components\\navigation\\Navigation.js":"4","D:\\REACT\\si-task-final\\src\\components\\content\\Content.js":"5"},{"size":301,"mtime":1659503850000,"results":"6","hashOfConfig":"7"},{"size":721,"mtime":1659534957452,"results":"8","hashOfConfig":"7"},{"size":156,"mtime":1659503848000,"results":"9","hashOfConfig":"7"},{"size":1162,"mtime":1659681837381,"results":"10","hashOfConfig":"7"},{"size":1850,"mtime":1659524703145,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1b1g1ms",{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},"D:\\REACT\\si-task-final\\src\\index.js",[],[],"D:\\REACT\\si-task-final\\src\\App.js",["30"],[],"import { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Content from \"./components/content/Content\";\nimport Footer from \"./components/footer/Footer\";\nimport Navigation from \"./components/navigation/Navigation\";\n\nfunction App() {\n  const [posts, setPosts] = useState([]);\n\n  useEffect(() => {\n    // fetch posts\n    fetch(`https://jsonplaceholder.typicode.com/posts`)\n      .then((response) => response.json())\n      .then((dataPosts) => setPosts(dataPosts));\n  }, []);\n\n  const slide = () => {};\n\n  return (\n      <div className=\"App\">\n        <div className=\"components\">\n        <Navigation />\n        <Content posts={posts} />\n        <Footer />\n        </div>\n      </div>\n  );\n}\n\nexport default App;\n","D:\\REACT\\si-task-final\\src\\components\\footer\\Footer.js",[],[],"D:\\REACT\\si-task-final\\src\\components\\navigation\\Navigation.js",["31","32","33","34","35"],[],"import React, { useState } from \"react\";\r\nimport \"./Navigation.css\";\r\nimport { GiHamburgerMenu } from \"react-icons/gi\";\r\n\r\n\r\nconst Navigation = () => {\r\n  const navItems = [\"Nav 1\", \"Nav 2\", \"Nav 3\", \"Nav 4\", \"Nav 5\", \"Nav 6\"];\r\n\r\n    const slide = () => {\r\n      const element = document.getElementById(\"slider\");\r\n      element.classList.toggle(\"active\");\r\n    };\r\n\r\n  return (\r\n    <div className=\"header\" id=\"slider\">\r\n       <div className=\"ham\" onClick={slide}>\r\n        <GiHamburgerMenu />\r\n      </div>\r\n      <ul className=\"navi\">\r\n        {navItems.map((item) => {\r\n          return (\r\n            <li key={item} onClick={slide}>\r\n              <a href=\"#\">{item}</a>\r\n              <ul onClick={slide}>\r\n                <li onClick={slide}>\r\n                  <a href=\"#\">SubNav 1</a>\r\n                </li>\r\n                <li onClick={slide}>\r\n                  <a href=\"#\">SubNav 2</a>\r\n                </li>\r\n                <li onClick={slide}>\r\n                  <a href=\"#\">SubNav 3</a>\r\n                </li>\r\n              </ul>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","D:\\REACT\\si-task-final\\src\\components\\content\\Content.js",["36","37"],[],"import React, { useState, useEffect } from \"react\";\r\n\r\nimport \"./Content.css\";\r\n\r\nconst Content = (props) => {\r\n  const [postId, setPostId] = useState();\r\n  const [authorId, setAuthorId] = useState(\"\");\r\n  const [body, setBody] = useState(\r\n    \"To get more post-details click on the list items\"\r\n  );\r\n  const [postTitle, setpostTitle] = useState(\"\");\r\n  const [userValues, setUserValues] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    getUserValues();\r\n  }, [postId]);\r\n\r\n  const getUserValues = () => {\r\n    // fetch user-data\r\n    fetch(`https://jsonplaceholder.typicode.com/users/${authorId}`)\r\n      .then((response) => response.json())\r\n      .then((dataUser) => setUserValues(dataUser));\r\n  };\r\n\r\n  return (\r\n    <div className=\"content\">\r\n      <div className=\"karte\">\r\n        <div className=\"ngcard\">\r\n          <div className=\"container\">\r\n            <div className=\"post-title\">\r\n              <b>{postTitle}</b>\r\n            </div>\r\n            {body}\r\n            <hr />\r\n            <h5>\r\n              <b>{userValues.name}</b>\r\n            </h5>\r\n            <p>\r\n              <a href=\"#\">{userValues.website}</a>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"provider\">\r\n        {props.posts.map((post) => {\r\n          return (\r\n            <div\r\n              className=\"list\"\r\n              key={post.id}\r\n              onClick={() => {\r\n                setAuthorId(post.userId);\r\n                setPostId(post.id);\r\n                setpostTitle(post.title);\r\n                setBody(post.body);\r\n              }}\r\n            >\r\n              <div className=\"post-title\">\r\n                {post.id}\r\n                {\". \"}\r\n                {post.title}\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Content;\r\n",{"ruleId":"38","severity":1,"message":"39","line":17,"column":9,"nodeType":"40","messageId":"41","endLine":17,"endColumn":14},{"ruleId":"38","severity":1,"message":"42","line":1,"column":17,"nodeType":"40","messageId":"41","endLine":1,"endColumn":25},{"ruleId":"43","severity":1,"message":"44","line":23,"column":15,"nodeType":"45","endLine":23,"endColumn":27},{"ruleId":"43","severity":1,"message":"44","line":26,"column":19,"nodeType":"45","endLine":26,"endColumn":31},{"ruleId":"43","severity":1,"message":"44","line":29,"column":19,"nodeType":"45","endLine":29,"endColumn":31},{"ruleId":"43","severity":1,"message":"44","line":32,"column":19,"nodeType":"45","endLine":32,"endColumn":31},{"ruleId":"46","severity":1,"message":"47","line":16,"column":6,"nodeType":"48","endLine":16,"endColumn":14,"suggestions":"49"},{"ruleId":"43","severity":1,"message":"44","line":39,"column":15,"nodeType":"45","endLine":39,"endColumn":27},"no-unused-vars","'slide' is assigned a value but never used.","Identifier","unusedVar","'useState' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getUserValues'. Either include it or remove the dependency array.","ArrayExpression",["50"],{"desc":"51","fix":"52"},"Update the dependencies array to be: [getUserValues, postId]",{"range":"53","text":"54"},[457,465],"[getUserValues, postId]"]